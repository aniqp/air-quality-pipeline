name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy-prod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH client and rsync
        run: |
          sudo apt-get update -y
          sudo apt-get install -y openssh-client rsync

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY_EC2" > ~/.ssh/ssh-key.pem
          chmod 400 ~/.ssh/ssh-key.pem
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          
      - name: Test connection to EC2
        run: |
          ssh -i ~/.ssh/ssh-key.pem ubuntu@$${{ secrets.EC2_ADDRESS }} "echo 'Connection successful!'"

      - name: Deploy code to EC2
        run: |
          ssh -i ~/.ssh/ssh-key.pem ubuntu@$EC2_ADDRESS 'git config --global --replace-all user.name "Aniq Premji" && git config --global --replace-all user.email $EMAIL'
          ssh -i ~/.ssh/ssh-key.pem ubuntu@$EC2_ADDRESS '
          if [ -d air-quality-pipeline ]; 
          then 
            cd air-quality-pipeline &&
            git status &&
            git restore .env &&
            git pull --rebase &&
            git status &&
            sed -i s:%AIRFLOW_UID%:'"$(id -u)"':g .env &&
            sed -i s:%AIRFLOW_GID%:0:g .env &&
            sed -i s:%_AIRFLOW_WWW_USER_USERNAME%:'"$_AIRFLOW_WWW_USER_USERNAME"':g .env &&
            sed -i s:%_AIRFLOW_WWW_USER_PASSWORD%:'"$_AIRFLOW_WWW_USER_PASSWORD"':g .env;
          else
            git clone @https://github.com/aniqp/air-quality-pipeline.git &&
            cd air-quality-pipeline &&
            ls -la &&
            chmod 777 logs &&
            sed -i s:%AIRFLOW_UID%:'"$(id -u)"':g .env &&
            sed -i s:%AIRFLOW_GID%:0:g .env &&
            sed -i s:%_AIRFLOW_WWW_USER_USERNAME%:'"$_AIRFLOW_WWW_USER_USERNAME"':g .env &&
            sed -i s:%_AIRFLOW_WWW_USER_PASSWORD%:'"$_AIRFLOW_WWW_USER_PASSWORD"':g .env &&
            docker-compose up airflow-init; 
          fi'
          ssh -i ~/.ssh/ssh-key.pem ubuntu@$EC2_ADDRESS 'cd air-quality-pipeline && 
          if docker ps | grep -q keyword; 
          then docker-compose down && docker-compose up -d --build; 
          else docker-compose up -d --build; 
          fi;'
